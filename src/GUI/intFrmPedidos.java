/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * intFrmPedidos.java
 *
 * Created on 27-feb-2009, 18:12:19
 */

package GUI;

import ca.odell.glazedlists.BasicEventList;
import ca.odell.glazedlists.EventList;
import ca.odell.glazedlists.swing.EventComboBoxModel;
import ca.odell.glazedlists.swing.EventTableModel;
import persistencia.*;
import dominio.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Toolkit;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.*;
import java.util.*;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import javax.swing.JComponent;
import javax.swing.JRootPane;
import javax.swing.KeyStroke;
/**
 *
 * @author Administrador
 */
public class intFrmPedidos extends javax.swing.JInternalFrame implements ActionListener{
//    public DefaultTableModel modelo = new DefaultTableModel();
    Vector headVector=new Vector(10);
    DateCellRenderer renderD = new DateCellRenderer();
    private static  intFrmPedidos peds = null;
    DefaultComboBoxModel modeloCli = new DefaultComboBoxModel();
    AutoResizeTable tblRes = AutoResizeTable.getInstancia();
    EventList<Pedidos> pedList = new BasicEventList<Pedidos>();
    EventList<Cliente> cliList = new BasicEventList<Cliente>();
    List listaCli = null;
    private static final String ACTION_ASIGN = "ACTION_ASIGN";
    /** Creates new form intFrmPedidos */
    private intFrmPedidos(){
        initComponents();
        int colDate=1;
        jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        pedList = recorrerLista();
        PedidosTableFormat tblPed = new PedidosTableFormat();
        
        EventTableModel<Pedidos> PedTableModel = new EventTableModel(pedList, tblPed);

        jTable2.setModel(PedTableModel);
        TableColumn col = jTable2.getColumnModel().getColumn(colDate);
        col.setCellRenderer(renderD);
        
        jTable2 = tblRes.autoResizeColWidth(jTable2, PedTableModel);
        jTable2.setSelectionForeground(Color.RED);
        this.getRootPane().setDefaultButton(btnPedidoNuevo);
        this.setMaximizable(true);
//        this.setMaximum(true);
        
    }

    public EventList recorrerLista(){
        Persistir p = Persistir.getInstancia();
        Vector<Pedidos> lista2 = p.listarPedidos();
        Iterator it = lista2.iterator();
        if(!pedList.isEmpty()){
            pedList.clear();
        }
        while(it.hasNext()){
            Vector v = new Vector();
            v = (Vector) it.next();
            int index = (Integer)v.get(0);
            Pedidos ped = new Pedidos();
            ped = p.buscarPedidoPorId(index);
            pedList.add(ped);
        }
        return pedList;

    }
    
    public void agregarArt(Articulos art){
        
        articulosList.add(art);
        cboArticulos.updateUI();
    }

    public void borrarArt(Articulos art){
        articulosList.remove(art);

    }

    public static intFrmPedidos getInstancia(){
        if(peds==null){
            peds=new intFrmPedidos();
        }
        return peds;
    }


     /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        PedidosPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("PedidosPU").createEntityManager();
        articulosQuery = java.beans.Beans.isDesignTime() ? null : PedidosPUEntityManager.createQuery("SELECT a FROM Articulos a ORDER BY a.nombre");
        articulosList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : articulosQuery.getResultList();
        movilesQuery = java.beans.Beans.isDesignTime() ? null : PedidosPUEntityManager.createQuery("SELECT m FROM Moviles m");
        movilesList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : movilesQuery.getResultList();
        clienteQuery = java.beans.Beans.isDesignTime() ? null : PedidosPUEntityManager.createQuery("SELECT c FROM Cliente c");
        clienteList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : clienteQuery.getResultList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnPedidoNuevo = new javax.swing.JButton();
        lblNombre = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblDireccion = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblTipoCli = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cboArticulos = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        lblNombreenPedido = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        txtFlete = new javax.swing.JTextField();
        btnBorrarPedido = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        cboClientes = new javax.swing.JComboBox();
        txtObservaciones = new javax.swing.JTextField();
        txtBuscarXDir = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        btnBuscarXDir = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtBuscarPorApellido = new javax.swing.JTextField();
        btnBuscarPorApellido = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable(){
            public Component prepareRenderer(TableCellRenderer renderer, int rowIndex, int vColIndex) {
                Component c = super.prepareRenderer(renderer, rowIndex, vColIndex);

                if (rowIndex % 2 == 0 && !isCellSelected(rowIndex, vColIndex)) {
                    java.awt.Color color = new java.awt.Color(242, 249, 255);
                    c.setBackground(color);
                } else {
                    // If not shaded, match the table's background
                    java.awt.Color color = new java.awt.Color(216, 230, 230);
                    c.setBackground(color);
                }
                return c;
            }
        };
        lblNroCli = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMaximizable(true);
        setTitle("Mantenimiento de Pedidos");
        setPreferredSize(new java.awt.Dimension(1020, 650));

        jLabel1.setText("Teléfono:");

        jLabel2.setText("Apellido, Nombre:");

        txtTelefono.setFont(new java.awt.Font("Tahoma", 1, 12));

        btnBuscar.setText("Buscar X tel");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnPedidoNuevo.setText("Nuevo Pedido");
        btnPedidoNuevo.setNextFocusableComponent(txtTelefono);
        btnPedidoNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPedidoNuevoActionPerformed(evt);
            }
        });

        lblNombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("Dirección:");

        lblDireccion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setText("Tipo:");

        lblTipoCli.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setText("Flete:");

        jLabel10.setText("Observaciones:");

        jLabel7.setText("Articulo:");

        cboArticulos.setNextFocusableComponent(txtFlete);

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, articulosList, cboArticulos);
        bindingGroup.addBinding(jComboBoxBinding);

        cboArticulos.setRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(
                JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value instanceof dominio.Articulos) {
                    Articulos art = (Articulos)value;
                    setText(art.getNombre());
                }
                return this;
            }
        });

        jLabel8.setText("Cantidad:");

        jLabel5.setText("Nombre:");

        jLabel6.setText("Fecha:");

        lblFecha.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblNombreenPedido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtCantidad.setNextFocusableComponent(txtObservaciones);

        txtFlete.setNextFocusableComponent(txtCantidad);

        btnBorrarPedido.setText("Eliminar Pedido");
        btnBorrarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarPedidoActionPerformed(evt);
            }
        });

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/logo_acodike.gif"))); // NOI18N
        jLabel13.setText("jLabel13");

        cboClientes.setRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(
                JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value instanceof dominio.Cliente) {
                    Cliente cli = (Cliente)value;
                    setText(cli.getApellidonombre() + " - " + cli.getDireccion());
                }
                return this;
            }
        });
        cboClientes.setNextFocusableComponent(txtBuscarXDir);
        cboClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboClientesActionPerformed(evt);
            }
        });

        txtObservaciones.setNextFocusableComponent(btnPedidoNuevo);

        txtBuscarXDir.setNextFocusableComponent(btnBuscarXDir);

        jLabel15.setText("Dir:");

        btnBuscarXDir.setText("buscar X dir");
        btnBuscarXDir.setNextFocusableComponent(txtBuscarPorApellido);
        btnBuscarXDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarXDirActionPerformed(evt);
            }
        });

        jButton1.setText("Actualizar planilla");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel11.setText("Apellido:");

        txtBuscarPorApellido.setNextFocusableComponent(btnBuscarPorApellido);
        txtBuscarPorApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarPorApellidoActionPerformed(evt);
            }
        });

        btnBuscarPorApellido.setText("Buscar X apellido");
        btnBuscarPorApellido.setNextFocusableComponent(cboArticulos);
        btnBuscarPorApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPorApellidoActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);

        lblNroCli.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNroCli.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblNroCli, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                            .addComponent(txtBuscarXDir, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarXDir)
                        .addGap(674, 674, 674))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(828, 828, 828)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(btnBuscar)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(cboClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel11)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtBuscarPorApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnBuscarPorApellido)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel3)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lblDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lblTipoCli, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(13, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtObservaciones, javax.swing.GroupLayout.DEFAULT_SIZE, 899, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblNombreenPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboArticulos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPedidoNuevo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBorrarPedido)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFlete, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1))
                        .addContainerGap(443, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblNroCli, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtBuscarXDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarXDir))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel11)
                    .addComponent(txtBuscarPorApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarPorApellido)
                    .addComponent(jLabel2)
                    .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(lblDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(lblTipoCli, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnPedidoNuevo)
                                .addComponent(btnBorrarPedido)
                                .addComponent(jButton1))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(lblFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(cboArticulos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9)
                                .addComponent(txtFlete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8)
                                .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblNombreenPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(txtObservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        
        cargarClientes();
        

}//GEN-LAST:event_btnBuscarActionPerformed
    public void cargarClientes(){
        Persistir p = Persistir.getInstancia();
        cliList.removeAll(cliList);
        listaCli = p.listarClientesPorTelefono(txtTelefono.getText());
        cliList.addAll(listaCli);
        EventComboBoxModel eModCli = new EventComboBoxModel(cliList);
        cboClientes.setModel(eModCli);
        if(cliList.size()==0)
            JOptionPane.showMessageDialog(this, "No existe un cliente con ese numero");
        Cliente cli=new Cliente();
        cboClientes.setSelectedIndex(0);
//        cboClientes.setSelectedItem(eModCli.getElementAt(0));
        cli = (Cliente) cboClientes.getSelectedItem();

        lblNombre.setText(cli.getApellidonombre());
        lblDireccion.setText(cli.getDireccion());
        lblTipoCli.setText(cli.getTipocliente());
        lblNombreenPedido.setText(cli.getApellidonombre());
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new java.util.Date();

        String dateStr = dateFormat.format(date);
        lblFecha.setText(dateStr);
        lblNroCli.setText(String.valueOf(cli.getId()));
    }

    public void cargarClientesPorDireccion(){
        Persistir p = Persistir.getInstancia();

        cliList.clear();
        listaCli = p.listarClientesPorDireccion(txtBuscarXDir.getText());
        cliList.addAll(listaCli);
        EventComboBoxModel eModCli = new EventComboBoxModel(cliList);
        cboClientes.setModel(eModCli);
        if(cliList.size()==0)
            JOptionPane.showMessageDialog(this, "No existe un cliente con esa dirección");
        Cliente cli=new Cliente();

        cboClientes.setSelectedItem(eModCli.getElementAt(0));
        cli = (Cliente) cboClientes.getSelectedItem();

        lblNombre.setText(cli.getApellidonombre());
        lblDireccion.setText(cli.getDireccion());
        lblTipoCli.setText(cli.getTipocliente());
        lblNombreenPedido.setText(cli.getApellidonombre());
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new java.util.Date();

        String dateStr = dateFormat.format(date);
        lblFecha.setText(dateStr);
        lblNroCli.setText(String.valueOf(cli.getId()));
    }

    private void cargarClientesPorApellido(){
        Persistir p = Persistir.getInstancia();

        cliList.clear();
        listaCli = p.listarClientesPorApellido(txtBuscarPorApellido.getText());
        cliList.addAll(listaCli);
        EventComboBoxModel eModCli = new EventComboBoxModel(cliList);
        cboClientes.setModel(eModCli);
        if(cliList.size()==0)
            JOptionPane.showMessageDialog(this, "No existen clientes con ese apellido");
        Cliente cli=new Cliente();

        cboClientes.setSelectedItem(eModCli.getElementAt(0));
        cli = (Cliente) cboClientes.getSelectedItem();

        lblNombre.setText(cli.getApellidonombre());
        lblDireccion.setText(cli.getDireccion());
        lblTipoCli.setText(cli.getTipocliente());
        lblNombreenPedido.setText(cli.getApellidonombre());
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new java.util.Date();

        String dateStr = dateFormat.format(date);
        lblFecha.setText(dateStr);
    }
    private void btnPedidoNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPedidoNuevoActionPerformed
        Persistir p= Persistir.getInstancia();
        Cliente cli=new Cliente();
        cli = (Cliente) cboClientes.getSelectedItem();
        if (cli==null)
            JOptionPane.showMessageDialog(this, "Debe seleccionar un cliente");
        else{
        Articulos art = new Articulos();
        art=(Articulos) cboArticulos.getSelectedItem();
        Pedidos ped = new Pedidos();
        if (txtCantidad.getText().equals(""))
            JOptionPane.showMessageDialog(this, "Debe poner una cantidad");
        else{
        ped.setCantidad(Integer.parseInt(txtCantidad.getText()));
        Date date = new Date();
        ped.setFechaPedido(date);
        if (txtFlete.getText().equals(""))
            JOptionPane.showMessageDialog(this, "Debe poner una un monto en Flete");
        else{
        ped.setFlete(Integer.parseInt(txtFlete.getText()));
        ped.setIdArticulo(art);
        Moviles m = new Moviles();
        Moviles m2 = new Moviles();

//        m=null;
//        m2=null;

        m = p.buscarMovilPorID(0);
        m2 = p.buscarMovilPorID(0);
        ped.setIdMovil(m);
        ped.setIdcliente(cli);
        ped.setObservaciones(txtObservaciones.getText());
        ped.setTotal();
        ped.setIdMovil2(m2);
        ped.setEntregado('P');
        p.guardar(ped);
        pedList.add(ped);
        limpiar();
        }}}
}//GEN-LAST:event_btnPedidoNuevoActionPerformed

   public void limpiar(){
       txtBuscarXDir.setText("");
       txtCantidad.setText("");
       txtFlete.setText("");
       txtObservaciones.setText("");
       txtTelefono.setText("");
       lblDireccion.setText("");
       lblFecha.setText("");
       lblNombre.setText("");
       lblNombreenPedido.setText("");
       lblTipoCli.setText("");
       if(!cliList.isEmpty())
            cliList.removeAll(listaCli);
       cboClientes.removeAll();
   }

    private void btnBorrarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarPedidoActionPerformed
        Persistir p = Persistir.getInstancia();
        int row = jTable2.getSelectedRow();
        Integer val =(Integer) jTable2.getValueAt(row, 0);
        Pedidos ped = new Pedidos();
        int id =val;
        ped = p.buscarPedidoPorId(id);
        p.eliminarPedido(ped);
        pedList.remove(ped);
        limpiar();
}//GEN-LAST:event_btnBorrarPedidoActionPerformed

    private void cboClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboClientesActionPerformed
        Persistir p = Persistir.getInstancia();
//        List l = p.listarClientesPorTelefono(txtTelefono.getText());
        if(cboClientes.getModel().getSize()==0){}

        else{
        Cliente cli = (Cliente) cboClientes.getSelectedItem();
        
        if (cli.getEstado()=='B') {
            int respuesta = JOptionPane.showConfirmDialog(rootPane, "Este cliente está dado de baja, desea volver a darle el alta?");
            if (respuesta == JOptionPane.YES_OPTION){
                cli.setEstado('A');
                p.actualizarCliente(cli);
                
                }
            }
        lblNombre.setText(cli.getApellidonombre());
        lblDireccion.setText(cli.getDireccion());
        lblTipoCli.setText(cli.getTipocliente());
        lblNombreenPedido.setText(cli.getApellidonombre());
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        java.util.Date date = new java.util.Date();
        String dateStr = dateFormat.format(date);
        lblFecha.setText(dateStr);
        }
        
    }//GEN-LAST:event_cboClientesActionPerformed

    private void btnBuscarXDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarXDirActionPerformed
        cargarClientesPorDireccion();
    }//GEN-LAST:event_btnBuscarXDirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        recorrerLista();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnBuscarPorApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPorApellidoActionPerformed
        cargarClientesPorApellido();
}//GEN-LAST:event_btnBuscarPorApellidoActionPerformed

    private void txtBuscarPorApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarPorApellidoActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtBuscarPorApellidoActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        Persistir p = Persistir.getInstancia();
        int row = jTable2.getSelectedRow();
        Integer val =(Integer) jTable2.getValueAt(row, 0);
        Pedidos ped = new Pedidos();
        int id =val;
        ped = p.buscarPedidoPorId(id);
        Cliente cli = new Cliente();
        cli=ped.getIdcliente();
        txtCantidad.setText(String.valueOf(ped.getCantidad()));
        txtFlete.setText(String.valueOf(ped.getFlete()));

        txtObservaciones.setText(String.valueOf(ped.getObservaciones()));

        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = ped.getFechaPedido();
        String dateStr = dateFormat.format(date);
        cboArticulos.setSelectedItem(ped.getIdArticulo());
        lblFecha.setText(dateStr);
        lblNombreenPedido.setText(cli.getApellidonombre());
    }//GEN-LAST:event_jTable2MouseClicked

public void insertarFilaPedidos(Pedidos ped){
    pedList.add(ped);
}

    public boolean actualizarComboClientes(){
        if (modeloCli==null){
            return false;
        }
        else{
            return true;
        }
    }

    public void txtTelefono (String telefono){
        txtTelefono.setText(telefono);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager PedidosPUEntityManager;
    private java.util.List<dominio.Articulos> articulosList;
    private javax.persistence.Query articulosQuery;
    private javax.swing.JButton btnBorrarPedido;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarPorApellido;
    private javax.swing.JButton btnBuscarXDir;
    private javax.swing.JButton btnPedidoNuevo;
    private javax.swing.JComboBox cboArticulos;
    private javax.swing.JComboBox cboClientes;
    private java.util.List<dominio.Cliente> clienteList;
    private javax.persistence.Query clienteQuery;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNombreenPedido;
    private javax.swing.JLabel lblNroCli;
    private javax.swing.JLabel lblTipoCli;
    private java.util.List<dominio.Moviles> movilesList;
    private javax.persistence.Query movilesQuery;
    private javax.swing.JTextField txtBuscarPorApellido;
    private javax.swing.JTextField txtBuscarXDir;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtFlete;
    private javax.swing.JTextField txtObservaciones;
    private javax.swing.JTextField txtTelefono;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
public void actionPerformed(ActionEvent e) {
        if(ACTION_ASIGN.equals(e.getActionCommand())) {
            DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            Date date = new java.util.Date();
            String dateStr = dateFormat.format(date);
            lblFecha.setText(dateStr);




            Persistir p = Persistir.getInstancia();
            int row = jTable2.getSelectedRow();
            Integer val =(Integer) jTable2.getValueAt(row, 0);
            Integer mov = (Integer) jTable2.getValueAt(row, 6);
            Pedidos ped = new Pedidos();
            int id =val;
            ped = p.buscarPedidoPorId(id);
            Moviles movil = new Moviles();
            if (movil==null)
                JOptionPane.showMessageDialog(this,"No ha espscificado número de móvil");
            else{
                movil = p.buscarMovilPorID(mov);
            }
            ped.setFechaPedido(date);
            ped.setMovilAsignado(movil);
            ped.setEntregado('E');
            
            dateFormat = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
            dateStr = dateFormat.format(ped.getFechaPedido());
           
            intFrmPedidosAsignados.getInstancia().agregarFilaPedido(ped);
            p.actualizarPedido(ped);
            pedList.remove(ped);
            limpiar();
        }
    }

    @Override
    protected JRootPane createRootPane() {
        JRootPane jrootPane = new JRootPane();
        int menuShortcutKey = Toolkit.getDefaultToolkit().getMenuShortcutKeyMask();
        KeyStroke w = KeyStroke.getKeyStroke(KeyEvent.VK_W, menuShortcutKey);
        KeyStroke f1 = KeyStroke.getKeyStroke(KeyEvent.VK_F1, 0);
        jrootPane.registerKeyboardAction(this, ACTION_ASIGN, w, JComponent.WHEN_IN_FOCUSED_WINDOW);
        jrootPane.registerKeyboardAction(this, ACTION_ASIGN, f1, JComponent.WHEN_IN_FOCUSED_WINDOW);
        return jrootPane;
    }
}


