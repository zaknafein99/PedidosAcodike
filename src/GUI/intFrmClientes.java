/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * intFrmClientes.java
 *
 * Created on 07-mar-2009, 15:04:40
 */

package GUI;

import ca.odell.glazedlists.BasicEventList;
import ca.odell.glazedlists.EventList;
import ca.odell.glazedlists.swing.EventTableModel;
import dominio.*;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.*;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;
import persistencia.Persistir;

/**
 *
 * @author Administrador
 */
public class intFrmClientes extends javax.swing.JFrame implements ActionListener{
    DefaultTableModel modelo = new DefaultTableModel();
    DefaultTableModel modeloBaja = new DefaultTableModel();
    Vector headVector = new Vector(5);
    AutoResizeTable tblRes = AutoResizeTable.getInstancia();
    private EventList<Cliente> cliList = new BasicEventList<Cliente>() ;
    private static intFrmClientes clis = null;
    private static final String ACTION_CLOSE = "ACTION_CLOSE";
    

    /** Creates new form intFrmClientes */
    private intFrmClientes() {
        initComponents();
        Persistir p = Persistir.getInstancia();
        Collection<Cliente> lista2 = p.listarClientes();
        cliList.addAll(lista2);
        ClientesTableFormat tblCli = new ClientesTableFormat();
        EventTableModel<Cliente> cliTableModel = new EventTableModel(cliList, tblCli);
        jTable1.setModel(cliTableModel);
//        refrescarGrilla();
        

    }

    public static intFrmClientes getInstancia(){
        if(clis==null){
            clis=new intFrmClientes();
        }
        return clis;
    }

//    private void refrescarGrilla(){
//        headVector.addElement("Nro Cliente");
//        headVector.addElement("Apellido, Nombre");
//        headVector.addElement("Dirección");
//        headVector.addElement("Tléfono");
//        headVector.addElement("Tipo");
//        headVector.addElement("Estado");
//        List lista = Persistir.getInstancia().listarClientes();
//        modelo.setDataVector((Vector) lista, headVector);
//        jTable1.setModel(modelo);
//        modelo.addTableModelListener(jTable1);
//        jTable1 = tblRes.autoResizeColWidth(jTable1, modelo);
//    }

    private void actualizarGrilla(){
        Vector v1 = new Vector();
        Vector v2 = new Vector();
        List lista3 = Persistir.getInstancia().listarClientes();
        modelo.setDataVector(v1, v2);
        modelo.setDataVector((Vector) lista3,headVector);
        modelo.fireTableDataChanged();
//        jTable1 = tblRes.autoResizeColWidth(jTable1, modelo);
}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        PedidosPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("PedidosPU").createEntityManager();
        clienteQuery = java.beans.Beans.isDesignTime() ? null : PedidosPUEntityManager.createQuery("SELECT c FROM Cliente c");
        clienteList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : clienteQuery.getResultList();
        jLabel1 = new javax.swing.JLabel();
        txtApeNom = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTipoCliente = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnEliminarCli = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        btnActualizarCli = new javax.swing.JButton();
        btnBorrarCliente = new javax.swing.JButton();

        setTitle("Mantenimiento de Clientes");

        jLabel1.setText("Apellido, Nombre:");

        jLabel2.setText("Dirección:");

        jLabel3.setText("Teléfono:");

        jLabel4.setText("Tipo Cliente:");

        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, clienteList, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${apellidonombre}"));
        columnBinding.setColumnName("Apellidonombre");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${direccion}"));
        columnBinding.setColumnName("Direccion");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${telefono}"));
        columnBinding.setColumnName("Telefono");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipocliente}"));
        columnBinding.setColumnName("Tipocliente");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${estado}"));
        columnBinding.setColumnName("Estado");
        columnBinding.setColumnClass(Character.class);
        bindingGroup.addBinding(jTableBinding);

        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnEliminarCli.setText("Dar de baja este cliente");
        btnEliminarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCliActionPerformed(evt);
            }
        });

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/logo_acodike.gif"))); // NOI18N
        jLabel13.setText("jLabel13");

        btnActualizarCli.setText("Actualizar Cliente");
        btnActualizarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarCliActionPerformed(evt);
            }
        });

        btnBorrarCliente.setText("Borrar cliente");
        btnBorrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEliminarCli)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBorrarCliente))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                                    .addComponent(txtApeNom, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(454, 454, 454))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTipoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnActualizarCli)))
                        .addGap(153, 153, 153))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtApeNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTipoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(btnActualizarCli))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminarCli)
                    .addComponent(btnBorrarCliente))
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Cliente cli=new Cliente();
        Persistir p = Persistir.getInstancia();
        cli.setApellidonombre(txtApeNom.getText());
        cli.setDireccion(txtDireccion.getText());
        cli.setTelefono(txtTelefono.getText());
        cli.setTipocliente(txtTipoCliente.getText());
        cli.setEstado('A');
        p.guardar(cli);
        JOptionPane.showMessageDialog(this, "Cliente ingresado con éxito");
        cliList.add(cli);
        
        

//        actualizarGrilla();
        intFrmPedidos frmPeds = null;
        
            frmPeds = intFrmPedidos.getInstancia();
       
           
        if (frmPeds.actualizarComboClientes()){
            frmPeds.txtTelefono(cli.getTelefono());
            frmPeds.cargarClientes();
        }
        limpiar();
//            frmPeds.cargarClientes();
    
//            frmPrincipal.getInstancia().mostarPedidos();
//     
        
//        frmPeds.actualizarComboClientes();
    }//GEN-LAST:event_jButton1ActionPerformed

    public void limpiar(){
        txtApeNom.setText("");
        txtDireccion.setText("");
        txtTelefono.setText("");
        txtTipoCliente.setText("");
    }

    private void btnEliminarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCliActionPerformed
        Persistir p = Persistir.getInstancia();
        int row = jTable1.getSelectedRow();
        Integer val =(Integer) jTable1.getValueAt(row, 0);
        Cliente cli = new Cliente();
        int id =val;
        cli = p.buscarClientePorId(id);
        p.darDeBajaCliente(cli);
        
    }//GEN-LAST:event_btnEliminarCliActionPerformed

    private void btnActualizarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarCliActionPerformed
        if (txtApeNom.getText().isEmpty() || txtDireccion.getText().isEmpty() || txtTelefono.getText().isEmpty() || txtTipoCliente.getText().isEmpty())
            JOptionPane.showMessageDialog(null, "Para editar un cliente debe seleccionarlo de la lista");
        else{
        Persistir p = Persistir.getInstancia();
        int row = jTable1.getSelectedRow();
        Integer val =(Integer) jTable1.getValueAt(row, 0);
        Cliente cli = new Cliente();
        int id = val;
        cli = p.buscarClientePorId(id);

//        cliList.remove(cli);

        cli.setApellidonombre(txtApeNom.getText());
        cli.setDireccion(txtDireccion.getText());
        cli.setTelefono(txtTelefono.getText());
        cli.setTipocliente(txtTipoCliente.getText());
        p.actualizarCliente(cli);

//        cliList.add(cli);
        cliList.set(row, cli);


        }
}//GEN-LAST:event_btnActualizarCliActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        Persistir p = Persistir.getInstancia();
        int row = jTable1.getSelectedRow();
        Integer val =(Integer) jTable1.getValueAt(row, 0);
        Cliente cli = new Cliente();
        int id = val;
        cli = p.buscarClientePorId(id);
        txtApeNom.setText(cli.getApellidonombre());
        txtDireccion.setText(cli.getDireccion());
        txtTelefono.setText(cli.getTelefono());
        txtTipoCliente.setText(cli.getTipocliente());
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnBorrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarClienteActionPerformed
        if (txtApeNom.getText().isEmpty() || txtDireccion.getText().isEmpty() || txtTelefono.getText().isEmpty() || txtTipoCliente.getText().isEmpty())
            JOptionPane.showMessageDialog(null, "Para borrar un cliente debe seleccionarlo de la lista");
        else{
        Persistir p = Persistir.getInstancia();
        int row = jTable1.getSelectedRow();
        Integer val =(Integer) jTable1.getValueAt(row, 0);
        Cliente cli = new Cliente();
        int id = val;
        cli = p.buscarClientePorId(id);

        cli.setApellidonombre(txtApeNom.getText());
        cli.setDireccion(txtDireccion.getText());
        cli.setTelefono(txtTelefono.getText());
        cli.setTipocliente(txtTipoCliente.getText());
        p.eliminarCliente(cli);
        cliList.remove(cli);
        JOptionPane.showMessageDialog(this, "Cliente eliminado con éxito");

        }
    }//GEN-LAST:event_btnBorrarClienteActionPerformed
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager PedidosPUEntityManager;
    private javax.swing.JButton btnActualizarCli;
    private javax.swing.JButton btnBorrarCliente;
    private javax.swing.JButton btnEliminarCli;
    private java.util.List<dominio.Cliente> clienteList;
    private javax.persistence.Query clienteQuery;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtApeNom;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtTipoCliente;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

 public void actionPerformed(ActionEvent e) {
        if(ACTION_CLOSE.equals(e.getActionCommand())) {
            setVisible(false);
            dispose();
        }
    }

    @Override
    protected JRootPane createRootPane() {
        JRootPane rootPane = new JRootPane();
        int menuShortcutKey = Toolkit.getDefaultToolkit().getMenuShortcutKeyMask();
        KeyStroke w = KeyStroke.getKeyStroke(KeyEvent.VK_W, menuShortcutKey);
        KeyStroke esc = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        rootPane.registerKeyboardAction(this, ACTION_CLOSE, w, JComponent.WHEN_IN_FOCUSED_WINDOW);
        rootPane.registerKeyboardAction(this, ACTION_CLOSE, esc, JComponent.WHEN_IN_FOCUSED_WINDOW);
        return rootPane;
    }
}